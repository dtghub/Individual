chess board

mvp

Initialise board
LOOP;
    display board
    user input moves - no move validation in the mvp
    execute input moves by updating board


white is lowercase; so white pawn is p, black pawn in P, etc


Initialise board
    Just load a set of values into a 2 dimensional array (the 'board')




display board
    Iterate over the board array and print it out
    decorate with 'a' 'b' 'c', '1' '2' '3' around the board



user input moves - no move validation in the mvp
    Input coordinate to move from 
        basic check that there is actually a piece there
    Input coordinate to move to (destination)



execute input moves by updating and displaying board
    Piece is copied to the destination square - if theer is a piece there it is overwritten by the new piece
    Square moved from is replaced with a blank character (space?)






------------------------------------

Next (possible) steps after MVP

use database (sqlite3) to implement simple save game feature

use the reserved 'row 0' in the chess board data struct to store more game state data (captured pieces, names of players etc)











-------------------------



Link to class with the data load (load file, external call, database call) functions to be doubled
List the functions that can be double, you don't need to a stub for all
Link to class with unit tests
List names of unit tests methods for stub, mock and fake

	
Clean Code (20%)
Refactoring (10%)
Adapter Design Pattern (10%)
Doubling Stub (10%)
Doubling Mocking (20%)
Doubling Faking (10%)
Unit Test Coverage (10%)



Stub – A function to return a hardcoded data structure
Mocking – A mocking framework is used to set dummy values to be returned from mocked classes at runtime. 
Faking -  A stub with logic. A simplified version of a real external application, to create fake responses. An in memory database, replaying recorded inputs, local responses such as web pages.


